[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "First Blog Post! & Blogging Resources",
    "section": "",
    "text": "üéâ Hi, this is my first blog post!\nThis blog was initially built as a project of the statistical computing class I‚Äôm taking."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yunyi‚Äôs Blog",
    "section": "",
    "text": "Hi, I‚Äôm Yunyi, a ScM student at the Johns Hopkins Bloomberg School of Public Health.\nI am currently doing virology research at the Pekosz lab. I also worked as a research assistant for resposible science communication at the R3ISE center. For more information, please visit my profile page.\nLooking forward to sharing some useful information with you here! üêæ\n\nThis blog is built with Quarto."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Yunyi's Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nExample Analysis: Who is the saddest shoegaze band?\n\n\n\n\n\n\nfun\n\n\n\n\n\n\n\n\n\nNov 8, 2024\n\n\n11 min\n\n\n\n\n\n\n\nBlog Design Checklist\n\n\n\n\n\n\nblogging\n\n\n\n\n\n\n\n\n\nOct 28, 2024\n\n\n1 min\n\n\n\n\n\n\n\nCoding Resources\n\n\n\n\n\n\ncoding\n\n\n\n\n\n\n\n\n\nOct 28, 2024\n\n\n1 min\n\n\n\n\n\n\n\nFirst Blog Post! & Blogging Resources\n\n\n\n\n\n\nblogging\n\n\n\n\n\n\n\n\n\nSep 13, 2024\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html#a-bit-of-information",
    "href": "posts/welcome/index.html#a-bit-of-information",
    "title": "First Blog Post",
    "section": "",
    "text": "This blog is built as a project of the statistical computing class I‚Äôm taking."
  },
  {
    "objectID": "posts/welcome/index.html#resources-used-to-build-this-blog",
    "href": "posts/welcome/index.html#resources-used-to-build-this-blog",
    "title": "First Blog Post",
    "section": "Resources Used to Build This Blog",
    "text": "Resources Used to Build This Blog\nI used RStudio + GitHub Pages (rendered to docs) to build this page.\n\nQuarto Guide\nThe Ultimate Guide to Starting a Quarto Blog by Albert Rapp"
  },
  {
    "objectID": "posts/welcome/index.html#resources",
    "href": "posts/welcome/index.html#resources",
    "title": "First Blog Post! & Blogging Resources",
    "section": "Resources",
    "text": "Resources\nI used RStudio + GitHub Pages (rendered to docs) to build this page.\nHere are some useful resources for a blogging newbie‚Ä¶ Will add more in future definitely!\n\nQuarto Guide\nThe Ultimate Guide to Starting a Quarto Blog by Albert Rapp\nComplete List of Github Markdown Emoji Markup"
  },
  {
    "objectID": "posts/Blog Design Checklist/index.html",
    "href": "posts/Blog Design Checklist/index.html",
    "title": "Blog Design Checklist",
    "section": "",
    "text": "This is a checklist/memo for some elements I want to add to this blog."
  },
  {
    "objectID": "posts/Blog Design Checklist/index.html#this-is-a-checklist-for-some-elements-i-want-to-add-to-this-blog",
    "href": "posts/Blog Design Checklist/index.html#this-is-a-checklist-for-some-elements-i-want-to-add-to-this-blog",
    "title": "Blog Design Checklist",
    "section": "",
    "text": "RSS Subscription\nContents (based on )\n\n\n\n\n\nSample Data Analysis: 90s Britain indie scene lyrics (140.777)\n[ ]"
  },
  {
    "objectID": "posts/Blog Design Checklist/index.html#checklist",
    "href": "posts/Blog Design Checklist/index.html#checklist",
    "title": "Blog Design Checklist",
    "section": "Checklist",
    "text": "Checklist\n\nFunctions\n\nMove this blog to yunyi-ru.github.io (is this necessary?)\nRSS Subscription\nComment (use utterances?)\nSection\nCustomized theme: minimal, light, serif font\nGallery\nSite Map\nCustomized favicon\nTry other CSS themes\n\n\n\nContents\n\nSample Data Analysis: 90s Britain indie scene lyrics (140.777), categories -&gt; fun\nMove ‚ÄòUseful links for A Molecular Biologist‚Äô here, categories -&gt; molbio\nAdd some blog posts about viral phylogenetics learning resources, categories -&gt; genetics"
  },
  {
    "objectID": "posts/Coding Resources/index.html",
    "href": "posts/Coding Resources/index.html",
    "title": "Coding Resources",
    "section": "",
    "text": "This page lists some coding resources that I find useful."
  },
  {
    "objectID": "posts/Coding Resources/index.html#resources",
    "href": "posts/Coding Resources/index.html#resources",
    "title": "Coding Resources",
    "section": "Resources",
    "text": "Resources\nSetting up VS code for R users\nSetting up VS Code for Python Development like RStudio, R-bloggers\nHow to integrate Python and R in Visual Studio Code, Medium"
  },
  {
    "objectID": "posts/blog_design/index.html",
    "href": "posts/blog_design/index.html",
    "title": "Blog Design Checklist",
    "section": "",
    "text": "This is a checklist/memo for some elements I want to add to this blog."
  },
  {
    "objectID": "posts/blog_design/index.html#checklist",
    "href": "posts/blog_design/index.html#checklist",
    "title": "Blog Design Checklist",
    "section": "Checklist",
    "text": "Checklist\n\nFunctions\n\nMove this blog to yunyi-ru.github.io (is this necessary?)\nRSS Subscription\nComment (use utterances?)\nSection\nCustomized theme: minimal, light, serif font\nGallery\nSite Map\nCustomized favicon\nTry other CSS themes\n\n\n\nContents\n\nMove ‚ÄòUseful links for A Molecular Biologist‚Äô here, categories -&gt; molbio\nAdd some blog posts about viral phylogenetics learning resources, categories -&gt; genetics"
  },
  {
    "objectID": "posts/coding_resources/index.html",
    "href": "posts/coding_resources/index.html",
    "title": "Coding Resources",
    "section": "",
    "text": "This page lists some coding resources that I find useful."
  },
  {
    "objectID": "posts/coding_resources/index.html#resources",
    "href": "posts/coding_resources/index.html#resources",
    "title": "Coding Resources",
    "section": "Resources",
    "text": "Resources\nSetting up VS code for R users\nSetting up VS Code for Python Development like RStudio, R-bloggers\nHow to integrate Python and R in Visual Studio Code, Medium"
  },
  {
    "objectID": "posts/lyric_analysis/index.html",
    "href": "posts/lyric_analysis/index.html",
    "title": "Example Analysis: Who is the saddest shoegaze band?",
    "section": "",
    "text": "I‚Äôm interested in the ‚Äòshoegaze‚Äô subgenre of indie rock. This less-known genre, also called ‚Äòthe scene that celebrates itself‚Äô, rose from the noise pop scene in the late 80s and early 90s, and has regained popularity recently. An article titled ‚ÄòThe Shoegaze Revival Hit Its Stride in 2023‚Äô (Sherburne 2023) by pitchfork also captures the revival of shoegaze among GenZ populations.\n\n\n\n\n\nShoegaze is an effect-heavy subgenre of indie rock.\n\n\n\n\n\nMy bloody valentine‚Äôs 1988 EP ‚ÄòYou made me realise‚Äô is a classic shoegaze record.\n\n\nShoegaze is characterized by heavy use of overdriven guitar and various effect pedals with the combination of the ethereal vocals; the lyrics are often regarded as blank, poetic, and sometimes difficult to distinguish from the instruments. So here comes this project for the indieheads - I want to analyze those usually overlooked lyrics, especially from the perspective of sentiment.\nThe bands I want to study are the so-called classic ‚Äòbig-three‚Äô of shoegaze: my bloody valentine, Ride, and slowdive. They were all on the independent record label Creation from London, UK, reached their peak in early 90s, disbanded in late 90s due to the fading of the subgenre, and reunited in the 21st century, which make them a perfect fit to study the changes in the lyrics over the years.\n\n\n\n\nWhat words frequently appear in their lyrics?\nWhich bands have the longest and shortest lyrics?\nWho is the saddest shoegaze band?\nAre bands trending towards happiness or sadness over time?"
  },
  {
    "objectID": "posts/lyric_analysis/index.html#why-this-project",
    "href": "posts/lyric_analysis/index.html#why-this-project",
    "title": "Example Analysis: Who is the saddest shoegaze band?",
    "section": "",
    "text": "I‚Äôm interested in the ‚Äòshoegaze‚Äô subgenre of indie rock. This less-known genre, also called ‚Äòthe scene that celebrates itself‚Äô, rose from the noise pop scene in the late 80s and early 90s, and has regained popularity recently. An article titled ‚ÄòThe Shoegaze Revival Hit Its Stride in 2023‚Äô (Sherburne 2023) by pitchfork also captures the revival of shoegaze among GenZ populations.\n\n\n\n\n\nShoegaze is an effect-heavy subgenre of indie rock.\n\n\n\n\n\nMy bloody valentine‚Äôs 1988 EP ‚ÄòYou made me realise‚Äô is a classic shoegaze record.\n\n\nShoegaze is characterized by heavy use of overdriven guitar and various effect pedals with the combination of the ethereal vocals; the lyrics are often regarded as blank, poetic, and sometimes difficult to distinguish from the instruments. So here comes this project for the indieheads - I want to analyze those usually overlooked lyrics, especially from the perspective of sentiment.\nThe bands I want to study are the so-called classic ‚Äòbig-three‚Äô of shoegaze: my bloody valentine, Ride, and slowdive. They were all on the independent record label Creation from London, UK, reached their peak in early 90s, disbanded in late 90s due to the fading of the subgenre, and reunited in the 21st century, which make them a perfect fit to study the changes in the lyrics over the years."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#my-auestions",
    "href": "posts/lyric_analysis/index.html#my-auestions",
    "title": "Sample Analysis: Who‚Äôs the most depressing shoegazing band?",
    "section": "",
    "text": "Who is the most depressing shoegazing band?\nWho is the most depressed lyricist?\nIs shoegazing bands becoming happier/sadder over time?"
  },
  {
    "objectID": "posts/lyric_analysis/index.html#data-acquisition-wragling",
    "href": "posts/lyric_analysis/index.html#data-acquisition-wragling",
    "title": "Example Analysis: Who is the saddest shoegaze band?",
    "section": "Data Acquisition & Wragling",
    "text": "Data Acquisition & Wragling\n\n\n  \n\nData Acquisition\nLyrics from all studio albums of the ‚Äòbig three‚Äô bands in the shoegaze genre - my bloody valentine (mbv), Ride, and slowdive - are retrieved from Genius.com using a Python package named lyricsgenius(Miller 2024) based on Genius API. Please see the author‚Äôs instructions for details.\n\n\n\n\n\n\nNote\n\n\n\nThe downloaded .json files were written into a .csv file for further processing. Please go to the source repository for more details.\n\n\n\n# load packages\nlibrary('stringi')\nlibrary('tidyverse')\nlibrary('lubridate')\nlibrary('knitr')\n\n# reference\nknitr::write_bib(\"rmarkdown\", file = \"my-refs.bib\")\n\n# import data\nlyrics &lt;- read.csv(\"lyrics_data.csv\")\nkable(head(lyrics, n = 1))\n\n\n\n\n\n\n\n\n\n\n\n\nTrack.Number\nSong.Title\nAlbum\nArtist\nRelease.Date\nLyrics\n\n\n\n\n1\nMoonlight Medicine\nCarnival of Light\nRide\n20-Jun-94\n5 ContributorsMoonlight Medicine Lyrics It‚Äôs just a state of mind Freedom and time Has got me frozen up inside I wanna recognise Under this moonlight That god is on my side With senses running wild We touched the sky It looks like heaven in my eyes Moonlight medicine Keeps me alive Don‚Äôt let your senses be denied Won‚Äôt you shine Some light in my mind The more I find The more I need your medicine in my life Won‚Äôt you shine Some light in my mind The more I find The more I need your medicine in my lifeSee Ride LiveGet tickets as low as $54You might also likeEmbed\n\n\n\n\n\n\n\nData Dictionary\n\n\n\n\n\n\n\n\nField Name\nData Type\nDescription\n\n\n\n\nTrack.Number\nInteger\nThe track number of the song in the album\n\n\nSong.Title\nString\nThe title of the song\n\n\nAlbum\nString\nThe name of the album the song belongs to\n\n\nArtist\nString\nThe artist performing the song\n\n\nRelease.Date\nString\nThe date the song was released\n\n\nLyrics\nString\nThe lyrics of the song\n\n\n\n\n\nData Cleaning\nYou might notice that the lyrics above have some problems -\n\n\n\n\n\n\nWarning\n\n\n\n\n‚Äò16 ContributorsBallad of Sister Sue Lyrics‚Äô at the beginning and ‚Äò6Embed‚Äô at the end are not part of the lyrics.\n‚Äò‚àö¬¢¬¨√Ñ¬¨√¥‚Äô - some problem with Unicode encoding/decoding.\n‚ÄòSee Slowdive LiveGet tickets as low as $55‚Äô - ads is also not part of the lyrics.\n\n\n\nSo, it requires some data cleaning.\n\n# clean text\nlyrics_clean &lt;- lyrics %&gt;%\n  mutate(Lyrics = stri_enc_toutf8(Lyrics)) %&gt;%\n  mutate(Lyrics = str_replace_all(Lyrics, '√¢\\u0080\\u0099', \"'\")) %&gt;%\n  mutate(\n    Lyrics = Lyrics %&gt;%\n      str_remove(\".*Lyrics\") %&gt;%\n      str_remove(\"See.*tickets as low as \\\\$\\\\d+\") %&gt;%\n      str_remove('You might also like') %&gt;%\n      str_remove('\\\\d*\\\\s*Embed$') %&gt;%\n      str_trim()\n  ) %&gt;%\n  filter(!str_detect(Lyrics, \"^\\\\s*$\")) # set date using lubridate\n\n# add some factors for further processing\nlyrics_clean &lt;- lyrics_clean %&gt;%\n  mutate(lyric.length = nchar(Lyrics),\n         Release.Date = dmy(Release.Date),\n         Release.Year = year(Release.Date), \n         Album = factor(Album, \n                        levels = c(\"Isn't Anything\", \"loveless\", \"m b v\", \n                                   \"Nowhere\", \"Going Blank Again\", \"Carnival of Light\", \"Tarantula\", \"Weather Diaries\", \"This is Not a Safe Place\", \"Interplay\", \n                                   \"Just for a Day\", \"Souvlaki\", \"Pygmalion\", \"slowdive\", \"everything is alive\")), \n         Reunite = year(Release.Date) &lt; 2000)\n\nprint(lyrics_clean[1,6])\n\n[1] \"It's just a state of mind Freedom and time Has got me frozen up inside I wanna recognise Under this moonlight That god is on my side With senses running wild We touched the sky It looks like heaven in my eyes Moonlight medicine Keeps me alive Don't let your senses be denied Won't you shine Some light in my mind The more I find The more I need your medicine in my life Won't you shine Some light in my mind The more I find The more I need your medicine in my life\""
  },
  {
    "objectID": "posts/lyric_analysis/index.html#section",
    "href": "posts/lyric_analysis/index.html#section",
    "title": "Sample Analysis: Who‚Äôs the most depressing shoegazing band?",
    "section": "1.",
    "text": "1."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#section-1",
    "href": "posts/lyric_analysis/index.html#section-1",
    "title": "Sample Analysis: Who‚Äôs the most depressing shoegazing band?",
    "section": "2.",
    "text": "2."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#section-2",
    "href": "posts/lyric_analysis/index.html#section-2",
    "title": "Sample Analysis: Who‚Äôs the most depressing shoegazing band?",
    "section": "3.",
    "text": "3."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#my-questions",
    "href": "posts/lyric_analysis/index.html#my-questions",
    "title": "Example Analysis: Who is the saddest shoegaze band?",
    "section": "",
    "text": "What words frequently appear in their lyrics?\nWhich bands have the longest and shortest lyrics?\nWho is the saddest shoegaze band?\nAre bands trending towards happiness or sadness over time?"
  },
  {
    "objectID": "posts/lyric_analysis/index.html#who-is-the-most-depressing-shoegaze-band",
    "href": "posts/lyric_analysis/index.html#who-is-the-most-depressing-shoegaze-band",
    "title": "Example Analysis: Who‚Äôs the most depressing shoegaze band?",
    "section": "Who is the most depressing shoegaze band?",
    "text": "Who is the most depressing shoegaze band?\n\n## data processing: sentiment 'afinn'\ntoken_afinn &lt;- token_count %&gt;%\n  inner_join(get_sentiments('afinn'), by = c(\"Word\" = \"word\"))\n\nafinn_score_by_artist &lt;- token_afinn %&gt;%\n  group_by(Artist) %&gt;%\n  summarize(avg = mean(value))\n\nggplot(afinn_score_by_artist, aes(x = Artist, y = avg, fill = Artist)) +\n  geom_col() +\n  scale_fill_manual(values = palette) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  labs(\n    title = 'Who is the Most Depressing Shoegaze Band?',\n    subtitle = 'Mbv has the lowest overall sentiment score.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n&lt;0: sad/negative, &gt;0: happy/positive.', \n    y = 'Sentiment Score', \n    x = 'Time'\n  )\n\n\n\n\n\n\n\n\nAmong the three bands, mbv has the lowest sentiment score, which means it is the most depressing shoegaze band (if we only look at the lyrics). All three bands got sentiment scores less than or equal to zero, with slowdive holding the highest score (0.00)."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#who-is-the-most-depressed-lyricist",
    "href": "posts/lyric_analysis/index.html#who-is-the-most-depressed-lyricist",
    "title": "Example Analysis: Who‚Äôs the most depressing shoegaze band?",
    "section": "2. Who is the most depressed lyricist?",
    "text": "2. Who is the most depressed lyricist?"
  },
  {
    "objectID": "posts/lyric_analysis/index.html#is-shoegaze-bands-becoming-happiersadder-over-time",
    "href": "posts/lyric_analysis/index.html#is-shoegaze-bands-becoming-happiersadder-over-time",
    "title": "Example Analysis: Who‚Äôs the most depressing shoegaze band?",
    "section": "3. Is shoegaze bands becoming happier/sadder over time?",
    "text": "3. Is shoegaze bands becoming happier/sadder over time?"
  },
  {
    "objectID": "posts/lyric_analysis/index.html#data-analysis",
    "href": "posts/lyric_analysis/index.html#data-analysis",
    "title": "Example Analysis: Who is the saddest shoegaze band?",
    "section": "Data Analysis",
    "text": "Data Analysis\n\nWhat words frequently appear in their lyrics?\n\nlibrary('tidytext')\n# tokenize\ntoken &lt;- lyrics_clean %&gt;%\n  unnest_tokens(output = Word,\n                input = Lyrics,\n                token = 'words')\n\n# stopwords dropped\ntoken_clean &lt;- token %&gt;%\n  anti_join(stop_words, by = c(\"Word\" = \"word\"))\n\ntoken_count &lt;- token_clean %&gt;%\n  group_by(Artist, Album, Release.Year) %&gt;%\n  count(Word, name = 'Word_count', sort = TRUE)\n\ntoken_count_head &lt;- token_count %&gt;%\n  group_by(Artist) %&gt;%\n  slice(1:30) %&gt;%\n  mutate(Word = fct_reorder(Word, Word_count, .desc = FALSE))\n\n# make a word cloud\nlibrary(ggplot2)\ntheme_set(theme_bw())\nlibrary(ggwordcloud)\npalette &lt;- c(\n  \"my bloody valentine\" = \"#DC143C\",\n  \"Ride\" = \"#1569C2\",\n  \"Slowdive\" = \"#CCBA16\",\n  \"when you sleep\" = \"#f28fa3\",\n  \"Vapour Trail\" = \"#77b0ed\",\n  \"When the Sun Hits\" = \"#f0e371\"\n  )\n\nggplot(token_count_head, aes(\n  label = Word,\n  size = Word_count,\n  color = Artist\n)) +\n  geom_text_wordcloud(word.ratio = 0.2, # adjust for overall word size\n                      max_size = 30) +\n  facet_wrap(~ Artist) +\n  scale_color_manual(values = palette) +\n  labs(\n    title = 'Most Frequent Words Used in Lyrics',\n    subtitle = \"Slowdive seems to have the most 'meaningful' lyrics.\",\n    caption = 'Word size based on frequency. Only the top 30 results are shown here.'\n  )\n\n\n\n\n\n\n\n\nThe result is kind of amusing. Ride and mbv rely their vocals heavily on harmonies and hummings - and it‚Äôs reflected honestly here, while slowdive has the most ‚Äòmeaningful‚Äô lyrics among the three. ‚ÄòLove‚Äô is the ultimate meaning of rock and roll, and it indeed appears in high frequency in all of their lyrics.\n\n\nWhich bands have the longest and shortest lyrics?\n\n# plotting\npalettetf &lt;- c(\n\"TRUE\" = \"black\",\n\"FALSE\" = \"white\")\n\nggplot(lyrics_clean, aes(x = Album, y = lyric.length, fill = Artist, color = Reunite)) + \n  geom_boxplot() +\n  scale_fill_manual(values = palette) +\n  scale_color_manual(values = palettetf) +\n  labs(\n    title = 'Which bands have the Longest/Shortest Lyrics?',\n    subtitle = 'Mbv has the shortest lyrics while Ride has the longest.',\n    caption = 'Boxplot showing the range and median of lyric lengths for each Album.', \n    color = 'Before Reunion?', \n    y = 'Lyric Length (character)'\n  ) +\n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\nAmong the three bands, Mbv always has the shortest lyrics overall while Ride has the longest. An interesting trend is that while Ride and slowdive have similar lyric length back in the 90s, after reunion, Ride tends to have longer lyrics - and the length increases for each album.\n\n\nWho is the saddest shoegaze band?\nI used afinn from package tidytext for sentiment analysis based on this paper(Koto and Adriani 2015).\n\n# data processing: sentiment 'afinn'\ntoken_afinn &lt;- token_count %&gt;%\n  inner_join(get_sentiments('afinn'), by = c(\"Word\" = \"word\"))\n\nafinn_score_by_artist &lt;- token_afinn %&gt;%\n  group_by(Artist) %&gt;%\n  summarize(avg = round(mean(value), 2))\n\nkable(afinn_score_by_artist)\n\n\n\n\nArtist\navg\n\n\n\n\nRide\n-0.06\n\n\nSlowdive\n0.00\n\n\nmy bloody valentine\n-0.11\n\n\n\n\n\nAmong the three bands, mbv has the lowest sentiment score, which means it is the saddest shoegaze band (if we only look at the lyrics). All three bands got sentiment scores less than or equal to zero, with slowdive holding the highest score (0.00).\n\nWhat about their greatest hits?\nUsing data from last.fm, we find out that the greatest hits of the three bands are:\n\nwhen you sleep - my bloody valentine (32171 weekly listeners),\nVapour Trail - Ride (1943 weekly listeners), and\nWhen the Sun Hits - Slowdive (53055 weekly listeners).\n\nI‚Äôm interested that whether those songs have a happier or sadder vibe compared to their other songs -\n\n# by song\ntoken_count_bysong &lt;- token_clean %&gt;%\n  group_by(Artist, Song.Title) %&gt;%\n  count(Word, name = 'Word_count', sort = TRUE)\n\n# give afinn score\ntoken_afinn_bysong &lt;- token_count_bysong %&gt;%\n  inner_join(get_sentiments('afinn'), by = c(\"Word\" = \"word\"))\n\n# clean data set, drop songs with only 1/2 rows\ntoken_afinn_bysong &lt;- token_afinn_bysong %&gt;%\n  group_by(Song.Title) %&gt;%\n  filter(n() &gt; 2) %&gt;%\n  ungroup()\n\n# calculate average scores\nafinn_score_all &lt;- token_afinn_bysong %&gt;%\n  group_by(Song.Title, Artist) %&gt;%\n  summarize(avg_song = mean(value)) \n\n# look at the greatest hits\nafinn_score_gh &lt;- afinn_score_all %&gt;%\n  filter(Song.Title == 'Vapour Trail' | Song.Title == 'When the Sun Hits' | Song.Title == 'when you sleep')\n\n# combine datasets for plotting\nafinn_score_gh &lt;- inner_join(afinn_score_gh, afinn_score_by_artist, by = c(\"Artist\" = \"Artist\"))\n\n# plot\nggplot(afinn_score_gh, aes(x = Artist)) +\n  geom_point(shape = 16, size = 3, aes(y = afinn_score_gh$avg, color = Artist)) +\n  geom_point(shape = 17, size = 3, aes(y = afinn_score_gh$avg_song, color = \nSong.Title)) +\n  scale_color_manual(values = palette) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  labs(\n    title = 'Who is the Saddest Shoegaze Band?',\n    subtitle = 'Mbv has the lowest overall sentiment score.\\nThe most popular songs have a higher sentiment score than average.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n&lt;0: sad/negative, &gt;0: happy/positive.', \n    y = 'Sentiment Score', \n    x = 'Time', \n    color = 'Artist average/\\ngreatest hits'\n  )\n\n\n\n\n\n\n\n\nAll those songs have a slightly higher sentiment score than their artist‚Äôs average scores. People seem to prefer happy songs!\n\n\nSo what are their happiest/saddest songs?\n\nextreme_song &lt;- afinn_score_all %&gt;%\n  group_by(Artist) %&gt;%\n  filter(avg_song == max(avg_song) | avg_song == min(avg_song))\n\nsorted_tibble &lt;- extreme_song %&gt;%\n  group_by(Artist) %&gt;%\n  arrange(Artist, avg_song) %&gt;%\n  ungroup()\n\nkable(sorted_tibble)\n\n\n\n\nSong.Title\nArtist\navg_song\n\n\n\n\nI Came to See the Wreck\nRide\n-1.500000\n\n\nOnly Now\nRide\n-1.500000\n\n\nThe Dawn Patrol\nRide\n2.000000\n\n\nThe Sadman\nSlowdive\n-2.333333\n\n\nEveryone Knows\nSlowdive\n3.000000\n\n\nif i am\nmy bloody valentine\n-1.400000\n\n\nonly shallow\nmy bloody valentine\n2.000000\n\n\n\n\n\nWith the table above, we find that Ride‚Äôs saddest songs are ‚ÄòI Came to See the Wreck‚Äô and ‚ÄòOnly Now‚Äô, and happiest songs is ‚ÄòThe Dawn Patrol‚Äô; Slowdive‚Äôs saddest song is ‚ÄòThe Sadman‚Äô, and happiest songs is ‚ÄòEveryone Knows‚Äô; mbv‚Äôs saddest songs are ‚Äòif i am‚Äô, and happiest song is only shallow. The sadman is really sad.\n\n\n\nAre bands trending towards happiness or sadness over time?\n\nafinn_score &lt;- token_afinn %&gt;%\n  group_by(Artist, Album, Release.Year) %&gt;%\n  summarize(avg = mean(value))\n\nlibrary(ggrepel)\nggplot(afinn_score,\n       aes(x = Release.Year, y = avg, color = Artist, label = Album)) +\n  geom_point() +\n  geom_line() +\n  geom_text_repel(size = 3) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  scale_color_manual(values = palette) +\n  labs(\n    title = 'Sentiment Trend of Lyrics Over Time',\n    subtitle = 'The bands are saddest around 1990.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n&lt;0: sad/negative, &gt;0: happy/positive.',\n    color = 'Artist',\n    y = 'Sentiment Score', \n    x = 'Time'\n  )\n\n\n\n\n\n\n\n\nWhen examining the trend over time, it is noteworthy that at the beginning of their careers, the bands all had very sad lyrics; in the middle of their careers, their lyrics became more positive. It is also interesting to observe that the latest albums of mbv, Ride, and Slowdive are all among the saddest of their entire careers."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#are-bands-trending-towards-happiness-or-sadness-over-time",
    "href": "posts/lyric_analysis/index.html#are-bands-trending-towards-happiness-or-sadness-over-time",
    "title": "Example Analysis: Who‚Äôs the most depressing shoegaze band?",
    "section": "Are bands trending towards happiness or sadness over time?",
    "text": "Are bands trending towards happiness or sadness over time?\n\nafinn_score &lt;- token_afinn %&gt;%\n  group_by(Artist, Album, Release.Year) %&gt;%\n  summarize(avg = mean(value))\n\nlibrary(ggrepel)\nggplot(afinn_score,\n       aes(x = Release.Year, y = avg, color = Artist, label = Album)) +\n  geom_point() +\n  geom_line() +\n  geom_text_repel(size = 3) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  scale_color_manual(values = palette) +\n  labs(\n    title = 'Sentiment Trend of Lyrics Over Time',\n    subtitle = 'The bands are saddest around 1990.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n&lt;0: sad/negative, &gt;0: happy/positive.',\n    color = 'Artist',\n    y = 'Sentiment Score', \n    x = 'Time'\n  )\n\n\n\n\n\n\n\n\nWhen examining the trend over time, it is noteworthy that at the beginning of their careers, the bands all had very sad lyrics; in the middle of their careers, their lyrics became more positive. It is also interesting to observe that the latest albums of mbv, Ride, and Slowdive are all among the saddest of their entire careers."
  },
  {
    "objectID": "posts/lyric_analysis/index.html#functions-used",
    "href": "posts/lyric_analysis/index.html#functions-used",
    "title": "Example Analysis: Who is the most depressing shoegaze band?",
    "section": "Functions Used",
    "text": "Functions Used\nTidyverse (dplyr, tidyr): %&gt;%, filter, summarize, group_by, str_remove, mutate, inner_join, anti_join, etc.\nggplot2: geom_point, geom_boxplot, geom_line, etc."
  }
]
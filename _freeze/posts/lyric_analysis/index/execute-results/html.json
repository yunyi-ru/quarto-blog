{
  "hash": "e831a18e2259f872b24ef8d498266f57",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Example Analysis: Who is the most depressing shoegaze band?\"\nauthor: \"Yunyi Ru\"\ndate: \"2024-11-08\"\ncategories: [fun]\nbibliography: \n - my-refs.bib\n - my-refs2.bib\n---\n\n\n\n# Introduction\n\n## Why This Project\n\nI'm interested in the 'shoegaze' subgenre of indie rock. This genre, also called 'the scene that celebrates itself', rose from the noise pop scene from the late 80s and early 90s. An article titled *'The Shoegaze Revival Hit Its Stride in 2023'* [@sherburne_shoegaze_2023] by pitchfork also captures the revival of shoegaze among GenZ populations.\n\n::: column-margin\n![Shoegaze is an effect-heavy subgenre of indie rock.](pedalboard.jpg)\n\n![My bloody valentine's 1988 EP 'You made me realise' is a classic shoegaze record.](Youmademerealise.png)\n:::\n\nShoegaze is characterized by heavy use of overdriven guitar and various effect pedals with the combination of the ethereal vocals; the lyrics are often regarded as blank, poetic, and sometimes difficult to distinguish from the instruments. So here come this project for the indieheads - I want to analyze those usually overlooked lyrics, especially from the perspective of sentiment.\n\nThe bands I want to study are the so-called classic 'big-three' of shoegaze: *my bloody valentine*, *Ride*, and *slowdive*. They were all on the independent record label *Creation* from London, UK, reached their peak in early 90s, disbanded in late 90s due to the fading of the subgenre, and reunited in the 21st century, which make them a perfect fit to study the changes in the lyrics over the years.\n\n## My Questions\n\n1.  What words frequently appear in their lyrics?\n2.  Which bands have the longest and shortest lyrics?\n3.  Who is the most depressing shoegaze band?\n4.  Are bands trending towards happiness or sadness over time?\n\n# Project\n\n## Data Acquisition & Wragling\n\n::: column-margin\n![](loveless.png) ![](nowhere.jpg) ![](souvlaki.jpeg)\n:::\n\n### Data Acquisition\n\nLyrics from all studio albums of the 'big three' bands in the shoegaze genre - *my bloody valentine (mbv)*, *Ride*, and *slowdive* - are retrieved from [Genius.com](https://genius.com/) using a Python package named [lyricsgenius](https://www.johnwmillr.com/scraping-genius-lyrics/)[@miller_johnwmillrlyricsgenius_2024] based on Genius API. Please see the author's instructions for details.\n\n::: callout-note\nThe downloaded `.json` files were written into a `.csv` file for further processing. Please go to the [source repository](https://github.com/yunyi-ru/quarto-blog) for more details.\n:::\n\n### Data Cleaning\n\nHere is a typical piece of lyrics retrieved directly from the website.\n\n> 16 ContributorsBallad of Sister Sue Lyrics Don√¢¬Ä¬ôt tell me I√¢¬Ä¬ôm lost if I don√¢¬Ä¬ôt seem too sure what to wear Don√¢¬Ä¬ôt tell me I√¢¬Ä¬ôm lost if I don√¢¬Ä¬ôt seem too sure what to wear There√¢¬Ä¬ôs a fire in my head and I√¢¬Ä¬ôm blinded by all I can√¢¬Ä¬ôt see There√¢¬Ä¬ôs a fire in my head and I√¢¬Ä¬ôm blinded by all I can√¢¬Ä¬ôt see Dancing to nowhere, I√¢¬Ä¬ôm losing my head among thieves Dancing to nowhere, I√¢¬Ä¬ôm losing my head among thieves And the man at the bar looked like all that he needed was gone And the man at the bar looked like all that he needed was gone Sister, I've lost all the feeling I'm lost and I'm sold I lay down beside you Sister, I'm blinded It's only my eyes I've sold them before The man said the drink in his hand would be all he required The man said the drink in his hand would be all he required And it seemed much the same when he pointed the gun at his head And it seemed much the same when he pointed the gun at his head Filled it with lead It made so much noise that I checked out of town, yeah Blood on my face and the words of a sage in my mind (It made so much noise that I checked out of town, yeah) See Slowdive LiveGet tickets as low as \\$55You might also like Sister, I've lost all the feeling I'm lost and I'm sold I lay down beside you Sister, I'm blinded It's only my eyes I've sold them before6Embed\n\n::: callout-warning\nIt has some problems -\n\n1.  '16 ContributorsBallad of Sister Sue Lyrics' at the beginning and '6Embed' at the end are not part of the lyrics.\n2.  '√¢¬Ä¬ô' - some problem with Unicode encoding/decoding.\n3.  'See Slowdive LiveGet tickets as low as \\$55' - ads is also not part of the lyrics.\n:::\n\nAnd it requires some data cleaning.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary('stringi')\nlibrary('tidyverse')\nlibrary('lubridate')\nlibrary(knitr)\n\n# reference\nknitr::write_bib(\"rmarkdown\", file = \"my-refs.bib\")\n\n# import data\nlyrics <- read.csv(\"lyrics_data.csv\")\n\n# clean text\nlyrics_clean <- lyrics %>%\n  mutate(Lyrics = stri_enc_toutf8(Lyrics)) %>%\n  mutate(Lyrics = str_replace_all(Lyrics, 'â\\u0080\\u0099', \"'\")) %>%\n  mutate(\n    Lyrics = Lyrics %>%\n      str_remove(\".*Lyrics\") %>%\n      str_remove(\"See.*tickets as low as \\\\$\\\\d+\") %>%\n      str_remove('You might also like') %>%\n      str_remove('\\\\d*\\\\s*Embed$') %>%\n      str_trim()\n  ) %>%\n  filter(!str_detect(Lyrics, \"^\\\\s*$\")) %>% # remove instrumental\n  mutate(Release.Date = dmy(Release.Date)) # set date using lubridate\n\nlyrics_clean <- lyrics_clean %>%\n  mutate(lyric.length = nchar(Lyrics),\n         Release.Year = year(Release.Date), \n         Album = factor(Album, \n                        levels = c(\"Isn't Anything\", \"loveless\", \"m b v\", \n                                   \"Nowhere\", \"Going Blank Again\", \"Carnival of Light\", \"Tarantula\", \"Weather Diaries\", \"This is Not a Safe Place\", \"Interplay\", \n                                   \"Just for a Day\", \"Souvlaki\", \"Pygmalion\", \"slowdive\", \"everything is alive\")), \n         Reunite = year(Release.Date) < 2000)\n```\n:::\n\n\n\nIt now gives a clear output -\n\n> Don't tell me I'm lost if I don't seem too sure what to wear Don't tell me I'm lost if I don't seem too sure what to wear There's a fire in my head and I'm blinded by all I can't see There's a fire in my head and I'm blinded by all I can't see Dancing to nowhere, I'm losing my head among thieves Dancing to nowhere, I'm losing my head among thieves And the man at the bar looked like all that he needed was gone And the man at the bar looked like all that he needed was gone Sister, I've lost all the feeling I'm lost and I'm sold I lay down beside you Sister, I'm blinded It's only my eyes I've sold them before The man said the drink in his hand would be all he required The man said the drink in his hand would be all he required And it seemed much the same when he pointed the gun at his head And it seemed much the same when he pointed the gun at his head Filled it with lead It made so much noise that I checked out of town, yeah Blood on my face and the words of a sage in my mind (It made so much noise that I checked out of town, yeah) Sister, I've lost all the feeling I'm lost and I'm sold I lay down beside you Sister, I'm blinded It's only my eyes I've sold them before\n\nAnd it's now ready for further processing.\n\n## Data Analysis\n\n### What words frequently appear in their lyrics?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary('tidytext')\n# tokenize\ntoken <- lyrics_clean %>%\n  unnest_tokens(output = Word,\n                input = Lyrics,\n                token = 'words')\n\n# stopwords dropped\ntoken_clean <- token %>%\n  anti_join(stop_words, by = c(\"Word\" = \"word\"))\n\ntoken_count <- token_clean %>%\n  group_by(Artist, Album, Release.Year) %>%\n  count(Word, name = 'Word_count', sort = TRUE)\n\ntoken_count_head <- token_count %>%\n  group_by(Artist) %>%\n  slice(1:30) %>%\n  mutate(Word = fct_reorder(Word, Word_count, .desc = FALSE))\n\n# make a word cloud\nlibrary(ggplot2)\ntheme_set(theme_bw())\nlibrary(ggwordcloud)\npalette <- c(\n  \"my bloody valentine\" = \"#DC143C\",\n  \"Ride\" = \"#1569C2\",\n  \"Slowdive\" = \"#CCBA16\",\n  \"when you sleep\" = \"#f28fa3\",\n  \"Vapour Trail\" = \"#77b0ed\",\n  \"When the Sun Hits\" = \"#f0e371\"\n  )\n\nggplot(token_count_head, aes(\n  label = Word,\n  size = Word_count,\n  color = Artist\n)) +\n  geom_text_wordcloud(word.ratio = 0.2, # adjust for overall word size\n                      max_size = 30) +\n  facet_wrap(~ Artist) +\n  scale_color_manual(values = palette) +\n  labs(\n    title = 'Most Frequent Words Used in Lyrics',\n    subtitle = \"Slowdive seems to have the most 'meaningful' lyrics.\",\n    caption = 'Word size based on frequency. Only the top 30 results are shown here.'\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/q1-1.png){width=672}\n:::\n:::\n\n\n\nThe result is kind of amusing. Ride and mbv rely their vocals heavily on harmonies and hummings - and it's reflected honestly here, while slowdive has the most 'meaningful' lyrics among the three. 'Love' is the ultimate meaning of rock and roll, and it indeed appears in high frequency in all of their lyrics.\n\n### Which bands have the longest and shortest lyrics?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plotting\npalettetf <- c(\n\"TRUE\" = \"black\",\n\"FALSE\" = \"white\")\n\nggplot(lyrics_clean, aes(x = Album, y = lyric.length, fill = Artist, color = Reunite)) + \n  geom_boxplot() +\n  scale_fill_manual(values = palette) +\n  scale_color_manual(values = palettetf) +\n  labs(\n    title = 'Which bands have the Longest/Shortest Lyrics?',\n    subtitle = 'Mbv has the shortest lyrics while Ride has the longest.',\n    caption = 'Boxplot showing the range and median of lyric lengths for each Album.', \n    color = 'Before Reunion?', \n    y = 'Lyric Length (character)'\n  ) +\n  theme(axis.text.x = element_text(angle = 90))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/q2-1.png){width=672}\n:::\n:::\n\n\n\nAmong the three bands, Mbv always has the shortest lyrics overall while Ride has the longest. An interesting trend is that while Ride and slowdive have similar lyric length back in the 90s, after reunion, Ride tends to have longer lyrics - and the length increases for each album.\n\n### Who is the most depressing shoegaze band?\n\nI used *afinn* from package `tidytext` for sentiment analysis based on this paper[@koto_comparative_2015].\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data processing: sentiment 'afinn'\ntoken_afinn <- token_count %>%\n  inner_join(get_sentiments('afinn'), by = c(\"Word\" = \"word\"))\n\nafinn_score_by_artist <- token_afinn %>%\n  group_by(Artist) %>%\n  summarize(avg = round(mean(value), 2))\n\nkable(afinn_score_by_artist)\n```\n\n::: {.cell-output-display}\n\n\n|Artist              |   avg|\n|:-------------------|-----:|\n|Ride                | -0.06|\n|Slowdive            |  0.00|\n|my bloody valentine | -0.11|\n\n\n:::\n:::\n\n\n\nAmong the three bands, mbv has the lowest sentiment score, which means it is the most depressing shoegaze band (if we only look at the lyrics). All three bands got sentiment scores less than or equal to zero, with slowdive holding the highest score (0.00).\n\n#### What about their greatest hits?\n\nUsing data from [last.fm](last.fm), we find out that the greatest hits of the three bands are:\n\n-   *when you sleep* - my bloody valentine (32171 weekly listeners),\n-   *Vapour Trail* - Ride (1943 weekly listeners), and\n-   *When the Sun Hits* - Slowdive (53055 weekly listeners).\n\nI'm interested that whether those songs have a happier or sadder vibe compared to their other songs -\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# by song\ntoken_count_bysong <- token_clean %>%\n  group_by(Artist, Song.Title) %>%\n  count(Word, name = 'Word_count', sort = TRUE)\n\ntoken_afinn_bysong <- token_count_bysong %>%\n  inner_join(get_sentiments('afinn'), by = c(\"Word\" = \"word\"))\n\nafinn_score_all <- token_afinn_bysong %>%\n  group_by(Song.Title, Artist) %>%\n  summarize(avg_song = mean(value))\n\n# look at the greatest hits\nafinn_score_bysong <- afinn_score_all %>%\n  filter(Song.Title == 'Vapour Trail' | Song.Title == 'When the Sun Hits' | Song.Title == 'when you sleep')\n\nafinn_score_bysong <- inner_join(afinn_score_bysong, afinn_score_by_artist, by = c(\"Artist\" = \"Artist\"))\n\n# plot\nggplot(afinn_score_bysong, aes(x = Artist)) +\n  geom_point(shape = 16, size = 3, aes(y = afinn_score_bysong$avg, color = Artist)) +\n  geom_point(shape = 17, size = 3, aes(y = afinn_score_bysong$avg_song, color = \nSong.Title)) +\n  scale_color_manual(values = palette) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  labs(\n    title = 'Who is the Most Depressing Shoegaze Band?',\n    subtitle = 'Mbv has the lowest overall sentiment score.\\nThe most popular songs have a higher sentiment score than average.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n<0: sad/negative, >0: happy/positive.', \n    y = 'Sentiment Score', \n    x = 'Time', \n    color = 'Artist average/\\ngreatest hits'\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/q3.2-1.png){width=672}\n:::\n:::\n\n\n\nAll those songs have a slightly higher sentiment score than their artist's average scores. People seem to prefer happy songs!\n\n#### So what are their happiest/saddest songs?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextreme_song <- afinn_score_all %>%\n  group_by(Artist) %>%\n  filter(avg_song == max(avg_song) | avg_song == min(avg_song))\n\nsorted_tibble <- extreme_song %>%\n  group_by(Artist) %>%\n  arrange(Artist, avg_song) %>%\n  ungroup()\n\nkable(sorted_tibble)\n```\n\n::: {.cell-output-display}\n\n\n|Song.Title           |Artist              | avg_song|\n|:--------------------|:-------------------|--------:|\n|OX4                  |Ride                |     -3.0|\n|Mary Anne            |Ride                |      3.0|\n|Ride The Wind        |Ride                |      3.0|\n|Spanish Air          |Slowdive            |     -2.5|\n|30th June            |Slowdive            |      3.0|\n|Everyone Knows       |Slowdive            |      3.0|\n|No More Sorry        |my bloody valentine |     -2.0|\n|Nothing Much to Lose |my bloody valentine |     -2.0|\n|new you              |my bloody valentine |      4.0|\n\n\n:::\n:::\n\n\n\nWith the table above, we find that Ride's saddest song is *'OX4'*, and happiest songs are *'Mary Anne'* and *'Ride the Wind'*; Slowdive's saddest song is *'Spanish Air'*, and happiest songs are *'30th June'* and *'Everyone Knows'*; mbv's saddest songs are *'No More Sorry'* and *'Nothing Much to Lose'*, and happiest song is *new you*.\n\n### Are bands trending towards happiness or sadness over time?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nafinn_score <- token_afinn %>%\n  group_by(Artist, Album, Release.Year) %>%\n  summarize(avg = mean(value))\n\nlibrary(ggrepel)\nggplot(afinn_score,\n       aes(x = Release.Year, y = avg, color = Artist, label = Album)) +\n  geom_point() +\n  geom_line() +\n  geom_text_repel(size = 3) +\n  geom_hline(yintercept = 0, linetype = 'dashed', color = 'black') +\n  scale_color_manual(values = palette) +\n  labs(\n    title = 'Sentiment Trend of Lyrics Over Time',\n    subtitle = 'The bands are saddest around 1990.',\n    caption = 'Average sentiment score calculated based on afinn scores.\\n<0: sad/negative, >0: happy/positive.',\n    color = 'Artist',\n    y = 'Sentiment Score', \n    x = 'Time'\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/q4-1.png){width=672}\n:::\n:::\n\n\n\nWhen examining the trend over time, it is noteworthy that at the beginning of their careers, the bands all had very sad lyrics; in the middle of their careers, their lyrics became more positive. It is also interesting to observe that the latest albums of mbv, Ride, and Slowdive are all among the saddest of their entire careers.\n\n# Notes\n\n`Tidyverse` (`dplyr`, `tidyr`): `%>%`, `filter`, `summarize`, `group_by`, `str_remove`, `mutate`, `inner_join`, `anti_join`, etc.\n\n`ggplot2`: `geom_point`, `geom_boxplot`, `geom_line`, etc.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}